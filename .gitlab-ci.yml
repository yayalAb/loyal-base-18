stages:
  - build_push  
  - deploy
  # global Variables
variables: 
  ODOO_PORT: "8069"
  SERVICE_NAME: "erp" 
  VERSION: "${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}"
  DOCKER_IMAGE: "$CI_REGISTRY_IMAGE/${SERVICE_NAME}:${VERSION}"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_BUILDKIT: "1"

services:
  - docker:20.10.7-dind

before_script:
  - echo "Setting up environment"
  - export DOCKER_HOST=tcp://docker:2375

build_push: 
  stage: build_push
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" || ($CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev")
    - if: $CI_COMMIT_BRANCH == "uat" || ($CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "uat")
    - if: $CI_COMMIT_BRANCH == "prod" || ($CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "prod")
    - if: $CI_COMMIT_BRANCH == "Pos" || ($CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "Pos")
    - if: $CI_COMMIT_BRANCH == "pos-uat" || ($CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "pos-uat")
  script:
    - unset DOCKER_HOST
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $DOCKER_IMAGE .
    - docker push $DOCKER_IMAGE
deploy:
  stage: deploy
  needs: ["build_push"]  
  rules:
    - if: $CI_COMMIT_BRANCH == "dev" || ($CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "dev")
  variables:
    REGISTRY_URL: "gitlab.niyatconsultancy.com:5050"
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$DEV_SERVER_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa,ed25519 $DEV_SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - |
      ssh -o StrictHostKeyChecking=yes $DEV_SERVER_USER@$DEV_SERVER_IP "
        sudo mkdir -p /home/$DEV_SERVER_USER/erp/odoo-erp &&
        sudo chown -R $DEV_SERVER_USER:$DEV_SERVER_USER /home/$DEV_SERVER_USER/erp/odoo-erp"
    - |
      echo "CI_REGISTRY=${REGISTRY_URL}
      CI_REGISTRY_USER=${CI_REGISTRY_USER}
      CI_REGISTRY_PASSWORD=${CI_REGISTRY_PASSWORD}
      VERSION=${VERSION}
      SERVICE_NAME=${SERVICE_NAME}" > .env
    - scp docker-compose.yml $DEV_SERVER_USER@$DEV_SERVER_IP:/home/$DEV_SERVER_USER/erp/odoo-erp/
    - scp .env $DEV_SERVER_USER@$DEV_SERVER_IP:/home/$DEV_SERVER_USER/erp/odoo-erp/
    - |
      ssh -o StrictHostKeyChecking=yes $DEV_SERVER_USER@$DEV_SERVER_IP "
        cd /home/$DEV_SERVER_USER/erp/odoo-erp &&
        mkdir -p ~/.docker &&
        echo '$CI_REGISTRY_PASSWORD' | docker login $REGISTRY_URL -u '$CI_REGISTRY_USER' --password-stdin &&
        echo '$CI_REGISTRY_PASSWORD' | sudo docker login $REGISTRY_URL -u '$CI_REGISTRY_USER' --password-stdin &&
        sudo docker-compose pull &&
        sudo docker-compose down &&
        sudo docker-compose up -d"
deploy_uat:
  stage: deploy
  needs: ["build_push"]  
  rules:
    - if: $CI_COMMIT_BRANCH == "uat" || ($CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "uat")
  variables:
    REGISTRY_URL: "gitlab.niyatconsultancy.com:5050"
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$UAT_SERVER_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa,ed25519 $UAT_SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - |
      ssh -o StrictHostKeyChecking=yes $UAT_SERVER_USER@$UAT_SERVER_IP "
        sudo mkdir -p /home/$UAT_SERVER_USER/erp/odoo-erp &&
        sudo chown -R $UAT_SERVER_USER:$UAT_SERVER_USER /home/$UAT_SERVER_USER/erp/odoo-erp"
    - |
      echo "CI_REGISTRY=${REGISTRY_URL}
      CI_REGISTRY_USER=${CI_REGISTRY_USER}
      CI_REGISTRY_PASSWORD=${CI_REGISTRY_PASSWORD}
      VERSION=${VERSION}
      SERVICE_NAME=${SERVICE_NAME}" > .env
    - scp docker-compose.yml $UAT_SERVER_USER@$UAT_SERVER_IP:/home/$UAT_SERVER_USER/erp/odoo-erp/
    - scp .env $UAT_SERVER_USER@$UAT_SERVER_IP:/home/$UAT_SERVER_USER/erp/odoo-erp/
    - |
      ssh -o StrictHostKeyChecking=yes $UAT_SERVER_USER@$UAT_SERVER_IP "
        cd /home/$UAT_SERVER_USER/erp/odoo-erp &&
        mkdir -p ~/.docker &&
        echo '$CI_REGISTRY_PASSWORD' | docker login $REGISTRY_URL -u '$CI_REGISTRY_USER' --password-stdin &&
        echo '$CI_REGISTRY_PASSWORD' | sudo docker login $REGISTRY_URL -u '$CI_REGISTRY_USER' --password-stdin &&
        sudo docker-compose pull &&
        sudo docker-compose down &&
        sudo docker-compose up -d"
deploy_prod:
  stage: deploy
  needs: ["build_push"]  
  rules:
    - if: $CI_COMMIT_BRANCH == "prod" || ($CI_PIPELINE_SOURCE == 'merge_request_event' && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "prod")
  variables:
    REGISTRY_URL: "gitlab.niyatconsultancy.com:5050"
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$PROD_SERVER_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa,ed25519 $PROD_SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - |
      ssh -o StrictHostKeyChecking=yes $PROD_SERVER_USER@$PROD_SERVER_IP "
        sudo mkdir -p /home/$PROD_SERVER_USER/erp/odoo-erp &&
        sudo chown -R $PROD_SERVER_USER:$PROD_SERVER_USER /home/$PROD_SERVER_USER/erp/odoo-erp"
    - |
      echo "CI_REGISTRY=${REGISTRY_URL}
      CI_REGISTRY_USER=${CI_REGISTRY_USER}
      CI_REGISTRY_PASSWORD=${CI_REGISTRY_PASSWORD}
      VERSION=${VERSION}
      SERVICE_NAME=${SERVICE_NAME}" > .env
    - scp docker-compose.yml $PROD_SERVER_USER@$PROD_SERVER_IP:/home/$PROD_SERVER_USER/erp/odoo-erp/
    - scp .env $PROD_SERVER_USER@$PROD_SERVER_IP:/home/$PROD_SERVER_USER/erp/odoo-erp/
    - |
      ssh -o StrictHostKeyChecking=yes $PROD_SERVER_USER@$PROD_SERVER_IP "
        cd /home/$PROD_SERVER_USER/erp/odoo-erp &&
        mkdir -p ~/.docker &&
        echo '$CI_REGISTRY_PASSWORD' | docker login $REGISTRY_URL -u '$CI_REGISTRY_USER' --password-stdin &&
        echo '$CI_REGISTRY_PASSWORD' | sudo docker login $REGISTRY_URL -u '$CI_REGISTRY_USER' --password-stdin &&
        sudo docker-compose pull &&
        sudo docker-compose down &&
        sudo docker-compose up -d"
deploy_pos:
  stage: deploy
  needs: ["build_push"]  
  rules:
    - if: $CI_COMMIT_BRANCH == "Pos" 
  variables:
    REGISTRY_URL: "gitlab.niyatconsultancy.com:5050"
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$DEV_SERVER_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa,ed25519 $DEV_SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - |
      ssh -o StrictHostKeyChecking=yes $DEV_SERVER_USER@$DEV_SERVER_IP "
        sudo mkdir -p /home/$DEV_SERVER_USER/erp/pos &&
        sudo chown -R $DEV_SERVER_USER:$DEV_SERVER_USER /home/$DEV_SERVER_USER/erp/pos"
    - |
      echo "CI_REGISTRY=${REGISTRY_URL}
      CI_REGISTRY_USER=${CI_REGISTRY_USER}
      CI_REGISTRY_PASSWORD=${CI_REGISTRY_PASSWORD}
      VERSION=${VERSION}
      SERVICE_NAME=${SERVICE_NAME}" > .env
    - scp docker-compose.pos.yml $DEV_SERVER_USER@$DEV_SERVER_IP:/home/$DEV_SERVER_USER/erp/pos/
    - scp .env $DEV_SERVER_USER@$DEV_SERVER_IP:/home/$DEV_SERVER_USER/erp/pos/
    - |
      ssh -o StrictHostKeyChecking=yes $DEV_SERVER_USER@$DEV_SERVER_IP "
        cd /home/$DEV_SERVER_USER/erp/pos &&
        mkdir -p ~/.docker &&
        echo '$CI_REGISTRY_PASSWORD' | docker login $REGISTRY_URL -u '$CI_REGISTRY_USER' --password-stdin &&
        echo '$CI_REGISTRY_PASSWORD' | sudo docker login $REGISTRY_URL -u '$CI_REGISTRY_USER' --password-stdin &&
        sudo docker-compose -f docker-compose.pos.yml pull &&
        sudo docker-compose -f docker-compose.pos.yml down &&
        sudo docker-compose -f docker-compose.pos.yml up -d"
deploy_pos_uat:
  stage: deploy
  needs: ["build_push"]  
  rules:
    - if: $CI_COMMIT_BRANCH == "pos-uat" 
  variables:
    REGISTRY_URL: "gitlab.niyatconsultancy.com:5050"
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$UAT_SERVER_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -t rsa,ed25519 $UAT_SERVER_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - |
      ssh -o StrictHostKeyChecking=yes $UAT_SERVER_USER@$UAT_SERVER_IP "
        sudo mkdir -p /home/$UAT_SERVER_USER/erp/pos &&
        sudo chown -R $UAT_SERVER_USER:$UAT_SERVER_USER /home/$UAT_SERVER_USER/erp/pos"
    - |
      echo "CI_REGISTRY=${REGISTRY_URL}
      CI_REGISTRY_USER=${CI_REGISTRY_USER}
      CI_REGISTRY_PASSWORD=${CI_REGISTRY_PASSWORD}
      VERSION=${VERSION}
      SERVICE_NAME=${SERVICE_NAME}" > .env
    - scp docker-compose.pos.yml $UAT_SERVER_USER@$UAT_SERVER_IP:/home/$UAT_SERVER_USER/erp/pos/
    - scp .env $UAT_SERVER_USER@$UAT_SERVER_IP:/home/$UAT_SERVER_USER/erp/pos/
    - |
      ssh -o StrictHostKeyChecking=yes $UAT_SERVER_USER@$UAT_SERVER_IP "
        cd /home/$UAT_SERVER_USER/erp/pos &&
        mkdir -p ~/.docker &&
        echo '$CI_REGISTRY_PASSWORD' | docker login $REGISTRY_URL -u '$CI_REGISTRY_USER' --password-stdin &&
        echo '$CI_REGISTRY_PASSWORD' | sudo docker login $REGISTRY_URL -u '$CI_REGISTRY_USER' --password-stdin &&
        sudo docker-compose -f docker-compose.pos.yml pull &&
        sudo docker-compose -f docker-compose.pos.yml down &&
        sudo docker-compose -f docker-compose.pos.yml up -d"
